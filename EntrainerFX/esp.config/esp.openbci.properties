# For Windows computer, the serial ports are called "COM1", "COM2", etc... 
# For Linux and some other Unix : "/dev/ttyS0", "/dev/ttyS1", "/dev/ttyUSB0".
port.identifier=COM12

# The baud rate
baud.rate=115200

# The data bits, one of DATABITS_5, DATABITS_6, DATABITS_7, DATABITS_8
data.bits=DATABITS_5

# The stop bits, one of BITS_1, BITS_2, BITS_1_5
stop.bits=BITS_1

# The parity, one of NONE, ODD, EVEN, MARK, SPACE
parity=NONE

# The flow control, one of NONE, RTSCTS_IN, RTSCTS_OUT, RTSCTS_IN_OUT, XONXOFF_IN, XONXOFF_OUT, XONXOFF_IN_OUT
flow.control=NONE

# If set to true, you as the user of ESP-OpenBCI have compiled your own
# rxtxSerial library and have placed it on the java.library.path.
# If not set this property to false.
rxtx.lib.installed=false

#
# The class com.github.mrstampy.esp.openbci.rxtx.RxtxNativeLibLoader should be able to 
# determine the correct native lib for the os and architecture on which ESP-OpenBCI is running.
# If not, set this property to one of windows, mac os x, linux or solaris.
os.override.name=

# The class com.github.mrstampy.esp.openbci.rxtx.RxtxNativeLibLoader should be able to 
# determine the correct native lib for the os and architecture on which ESP-OpenBCI is running.
# If not and the os.override.name property is set to either windows, linux or solaris this property can be set to one of:
#		For Linux: 		one of x86_64, ia64, i686
#		For Solaris: 	one of sparc32, sparc64
#		For Windows:	one of x86, 64 or blank
os.override.arch=

#
# How many data points can be expected per second?
buffer.size.one.second=4096

#
# How many data points used for FFT (power of 2, < buffer.size.one.second)
fft.size=2048

#
# How many samples per second
sample.rate=200

#
# The highest raw value that can be expected
highest.signal.val=99999

#
# The lowest raw value that can be expected
lowest.signal.val=-99999

#
# Number of OpenBCI channels
#
esp.openbci.num.channels=1

#
# Optional descriptions; use properties in the form
# 'esp.openbci.channel#.desc' where '#' is a sequential
# integer starting at 1.
#
esp.openbci.channel1.desc=Optional description for channel 1